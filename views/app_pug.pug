doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title AI LaTeX Generator - Pug Version
    style.
      :root {
        --background: #f8fafc;
        --foreground: #0f172a;
        --primary: #3b82f6;
        --primary-foreground: #ffffff;
        --secondary: #f1f5f9;
        --secondary-foreground: #1e293b;
        --accent: #e2e8f0;
        --accent-foreground: #1e293b;
        --destructive: #ef4444;
        --destructive-foreground: #ffffff;
        --success: #22c55e;
        --success-foreground: #ffffff;
        --border: #e2e8f0;
        --input: #e2e8f0;
        --ring: #3b82f6;
        --radius: 0.5rem;
      }
      
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }
      
      body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background-color: var(--background);
        color: var(--foreground);
        line-height: 1.5;
      }
      
      .main-container {
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }
      
      .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 2rem;
        border-bottom: 1px solid var(--border);
        background-color: rgba(255, 255, 255, 0.8);
        position: sticky;
        top: 0;
        z-index: 10;
      }
      
      .logo {
        font-weight: bold;
        font-size: 1.25rem;
        color: var(--foreground);
        display: flex;
        align-items: center;
        gap: 0.5rem;
      }
      
      .nav-links {
        display: flex;
        gap: 1.5rem;
      }
      
      .nav-link {
        color: var(--foreground);
        text-decoration: none;
        font-weight: 500;
      }
      
      .auth-buttons {
        display: flex;
        gap: 0.75rem;
      }
      
      .btn {
        padding: 0.5rem 1rem;
        border-radius: var(--radius);
        font-weight: 500;
        cursor: pointer;
        border: none;
      }
      
      .btn-primary {
        background-color: var(--primary);
        color: var(--primary-foreground);
      }
      
      .btn-outline {
        background-color: transparent;
        border: 1px solid var(--border);
        color: var(--foreground);
      }
      
      .content {
        flex: 1;
        display: flex;
        flex-direction: column;
        padding: 2rem;
      }
      
      .app-container {
        display: flex;
        flex-direction: column;
        gap: 2rem;
      }
      
      @media (min-width: 768px) {
        .app-container {
          flex-direction: row;
        }
      }
      
      .panel {
        flex: 1;
        background: white;
        border-radius: var(--radius);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
      }
      
      .panel-title {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--foreground);
      }
      
      .credits-badge {
        background-color: #f0f9ff;
        color: #0284c7;
        font-size: 0.875rem;
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        font-weight: 500;
      }
      
      .document-types {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
      }
      
      .document-type {
        padding: 0.5rem 0.75rem;
        border: 1px solid var(--border);
        border-radius: var(--radius);
        font-size: 0.875rem;
        cursor: pointer;
      }
      
      .document-type.selected {
        background-color: var(--primary);
        color: white;
        border-color: var(--primary);
      }
      
      .prompt-label {
        display: block;
        font-weight: 500;
        font-size: 0.875rem;
        margin-bottom: 0.5rem;
      }
      
      .prompt-input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid var(--border);
        border-radius: var(--radius);
        resize: vertical;
        min-height: 100px;
        margin-bottom: 1rem;
      }
      
      .generate-button {
        background-color: var(--primary);
        color: white;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: var(--radius);
        border: none;
        cursor: pointer;
      }
      
      .tabs {
        display: flex;
        border-bottom: 1px solid var(--border);
        margin-bottom: 1rem;
      }
      
      .tab {
        padding: 0.75rem 1rem;
        font-weight: 500;
        cursor: pointer;
        border-bottom: 2px solid transparent;
      }
      
      .tab.active {
        border-bottom-color: var(--primary);
        color: var(--primary);
      }
      
      .tab-content {
        background-color: #f9fafb;
        padding: 1rem;
        border-radius: var(--radius);
        font-family: monospace;
        white-space: pre-wrap;
        overflow-x: auto;
        min-height: 200px;
      }

  body
    div.main-container
      header.header
        div.logo AI LaTeX Generator
        
        nav.nav-links
          a.nav-link(href="#") Home
          a.nav-link(href="#") Documents
          a.nav-link(href="#") Showcase
        
        div.auth-buttons
          span.credits-badge 3 Credits Remaining
          button.btn.btn-outline Account
          button.btn.btn-primary Upgrade
      
      main.content
        div.app-container
          div.panel
            h2.panel-title Create a new LaTeX document
            
            div
              p What type of document would you like to create?
              div.document-types
                div.document-type.selected Basic
                div.document-type Slide
                div.document-type Report
                div.document-type Letter
            
            div
              label.prompt-label(for="prompt-input") Describe your document:
              textarea#prompt-input.prompt-input(placeholder="Describe what you want to generate, e.g., 'A mathematical paper about quantum computing with an abstract, introduction, and three sections...'")
              
              button.generate-button Generate LaTeX
          
          div.panel
            div.tabs
              div.tab.active LaTeX
              div.tab PDF
              div.tab Console
            
            div.tab-content
              | \\documentclass{article}
              | 
              | \\usepackage{amsmath}
              | \\begin{document}
              | \\title{AI Generated Document}
              | \\author{AI LaTeX Generator}
              | \\maketitle
              | \\begin{equation}
              |   E = mc^2
              | \\end{equation}
              | \\end{document}
    
    script.
      document.addEventListener('DOMContentLoaded', () => {
        const tabs = document.querySelectorAll('.tab');
        const documentTypes = document.querySelectorAll('.document-type');
        
        tabs.forEach(tab => {
          tab.addEventListener('click', () => {
            tabs.forEach(t => t.classList.remove('active'));
            tab.classList.add('active');
          });
        });
        
        documentTypes.forEach(type => {
          type.addEventListener('click', () => {
            documentTypes.forEach(t => t.classList.remove('selected'));
            type.classList.add('selected');
          });
        });
        
        const generateButton = document.querySelector('.generate-button');
        const promptInput = document.getElementById('prompt-input');
        const outputEl = document.querySelector('.tab-content');
        
        generateButton.addEventListener('click', () => {
          if (!promptInput.value.trim()) {
            alert('Please enter a prompt first');
            return;
          }
          
          generateButton.textContent = 'Generating...';
          generateButton.disabled = true;
          
          // Simulate API call
          setTimeout(() => {
            const selectedType = document.querySelector('.document-type.selected').textContent.trim();
            let template = '';
            
            switch(selectedType) {
              case 'Slide':
                template = `\\documentclass{beamer}\n\\\usepackage{amsmath}\n\\\usepackage{graphicx}\n\n\\title{${promptInput.value.substring(0, 30)}...}\n\\author{AI LaTeX Generator}\n\\date{\\today}\n\n\\begin{document}\n\n\\begin{frame}\n\\titlepage\n\\end{frame}\n\n\\begin{frame}{Introduction}\n\\begin{itemize}\n  \\item First point about ${promptInput.value.substring(0, 20)}\n  \\item Second important concept\n  \\item Third key idea\n\\end{itemize}\n\\end{frame}\n\n\\end{document}`;
                break;
                
              case 'Report':
                template = `\\documentclass{report}\n\\\usepackage{amsmath}\n\\\usepackage{graphicx}\n\\\usepackage{hyperref}\n\n\\title{${promptInput.value.substring(0, 30)}...}\n\\author{AI LaTeX Generator}\n\\date{\\today}\n\n\\begin{document}\n\n\\maketitle\n\\tableofcontents\n\n\\chapter{Introduction}\nThis report explores ${promptInput.value}.\n\n\\chapter{Methodology}\nThe approach taken in this analysis...\n\n\\chapter{Results}\nThe findings of our investigation show...\n\n\\chapter{Conclusion}\nIn conclusion, we have demonstrated...\n\n\\end{document}`;
                break;
                
              default:
                template = `\\documentclass{article}\n\\\usepackage{amsmath}\n\\usepackage{graphicx}\n\n\\title{${promptInput.value.substring(0, 30)}...}\n\\author{AI LaTeX Generator}\n\\date{\\today}\n\n\\begin{document}\n\\maketitle\n\n\\begin{abstract}\nThis paper examines ${promptInput.value}.\n\\end{abstract}\n\n\\section{Introduction}\n${promptInput.value}\n\n\\section{Background}\nImportant concepts related to this topic include...\n\n\\section{Methodology}\nOur approach to analyzing this problem...\n\n\\begin{equation}\nE = mc^2\n\\end{equation}\n\n\\section{Results}\nThe findings of our analysis indicate...\n\n\\section{Conclusion}\nIn conclusion, we have shown...\n\n\\end{document}`;
            }
            
            outputEl.textContent = template;
            generateButton.textContent = 'Generate LaTeX';
            generateButton.disabled = false;
          }, 1500);
        });
      }
    